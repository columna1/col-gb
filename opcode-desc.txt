init.
bor = bit.bor
band = bit.band
xor = bit.bxor
lshift = bit.lshift
rshift = bit.rshift

func.
sub :((%1-%2 > 0) and %1-%2 or 0)
bor :bor(%,%)
xor :xor(%,%)
band :band(%,%)
lsh :lshift(%,%)
rb :mem.getByte(%)
rbi 1:mem.getByte(%)
rbsi 1:mem.getSignedByte(%)
wb :mem.setByte(%,%)
wbb :mem.setByte(bit.band(%1,0xFF),%2) ; mem.setByte(bit.band(%1,0xFF00),%2+1)
wbi 1:mem.setByte(%,%)
sxb :(%+lshift(%,8))
HL :(lshift(self.H,8)+self.L)
DE :(lshift(self.D,8)+self.E)
fb :band(%,0xFF)
lb :rshift(band(%,0xFF00),8)
limit :bit.band(%,0xFF)
limitS :bit.band(%,0xFFFF)
plus : (%+%)

setFH :self.F = (band(%,0xF )+band(%,0xF ) > 0xF ) and bor(self.F,0x20) or band(self.F,0xDF)
setFHs :self.F= (((band(%1,0xF)-band(%2,0xF)) < 0) and %1 > 0 ) and bor(self.F,0x20) or band(self.F,0xDF)
setFC :self.F = (band(%,0xFF)+band(%,0xFF) > 0xFF) and bor(self.F,0x10) or band(self.F,0xEF)
setFCs :self.F = (%-% < 0) and bor(self.F,0x10) or band(self.F,0xEF)
setFHx :self.F = (band(%,0xFFF )+band(%,0xFFF ) > 0xFFF ) and bor(self.F,0x20) or band(self.F,0xDF)
setFCx :self.F = (band(%,0xFFFF)+band(%,0xFFFF) > 0xFFFF) and bor(self.F,0x10) or band(self.F,0xEF)
setFZ :self.F = (% == 0) and bor(self.F,0x80) or band(self.F,0x7F)
setFN :self.F = bor(self.F,0x40)
setFNz :self.F = band(self.F,0xBF)
setFZz :self.F = band(self.F,0x7F)
setFCz :self.F = band(self.F,0xEF)
setFHz :self.F = band(self.F,0xDF)

setFCa : self.F = ((% == 0) and band(self.F,0xEF) or bor(self.F,0x10))

getFC :(band(self.F,0x10)>0 and 1 or 0)

ifnz :if (band(self.F,0x80) == 0) then
ifz :if (band(self.F,0x80) > 0) then
incCyc :cycles = cycles + %

cpfunct : local temp = %1 - %2 ; self.F = temp<0 and 0x50 or 0x40




; temp = band(temp,0xff); if temp == 0 then self.F = bor(self.F,0x80) end if band(xor(xor(%1,%2),temp),0x10)>0 then self.F = bor(self.F,0x20) end

#debug
print :print(%)

reg.
A:self.A
B:self.B
C:self.C
D:self.D
E:self.E
F:self.F
H:self.H
L:self.L
SP:self.SP
SPpo:self.SP+1
SPpt:self.SP+2
SPmo:self.SP-1
SPmt:self.SP-2
PC:self.PC
PCP:self.PC+1
PCpt:self.PC+2
local: local
temp:temp
t:t
tempPo:temp+1
tempMo:temp-1
tempMt:temp-2
e:8
ffzz:0xFF00

if:if
then:then
else:else
elseif:elseif
end:end
and:and
or:or

sf:64

op.
#LD nn,n
8|0x06:B = rbi PC 
8|0x0E:C = rbi PC 
8|0x16:D = rbi PC 
8|0x1E:E = rbi PC 
8|0x26:H = rbi PC 
8|0x2E:L = rbi PC 

#LD r1,r2
4|0x7F:A = A 
4|0x78:A = B 
4|0x79:A = C 
4|0x7A:A = D 
4|0x7B:A = E 
4|0x7C:A = H 
4|0x7D:A = L 
8|0x7E:A = rb HL
4|0x40:B = B
4|0x41:B = C
4|0x42:B = D
4|0x43:B = E
4|0x44:B = H
4|0x45:B = L
8|0x46:B = rb HL
4|0x48:C = B
4|0x49:C = C
4|0x4A:C = D
4|0x4B:C = E
4|0x4C:C = H
4|0x4D:C = L
8|0x4E:C = rb HL
4|0x50:D = B
4|0x51:D = C
4|0x52:D = D
4|0x53:D = E
4|0x54:D = H
4|0x55:D = L
8|0x56:D = rb HL
4|0x58:E = B
4|0x59:E = C
4|0x5A:E = D
4|0x5B:E = E
4|0x5C:E = H
4|0x5D:E = L
8|0x5E:E = rb HL
4|0x60:H = B
4|0x61:H = C
4|0x62:H = D
4|0x63:H = E
4|0x64:H = H
4|0x65:H = L
8|0x66:H = rb HL
4|0x68:L = B
4|0x69:L = C
4|0x6A:L = D
4|0x6B:L = E
4|0x6C:L = H
4|0x6D:L = L
8|0x6E:L = rb HL
8|0x70:wb B HL
8|0x71:wb C HL
8|0x72:wb D HL
8|0x73:wb E HL
8|0x74:wb H HL
8|0x75:wb L HL
12|0x36:wb rbi PC HL
#LD A,n
8|0x0A:A = rb sxb C B
8|0x1A:A = rb sxb E D
16|0xFA:A = rb sxb rbi PC rbi PCP
8|0x3E:A = rbi PC
#LD n,A
4|0x47:B = A
4|0x4F:C = A
4|0x57:D = A
4|0x5F:E = A
4|0x67:H = A
4|0x6F:L = A
8|0x02:wb A sxb C B
8|0x12:wb A sxb E D
8|0x77:wb A HL
16|0xEA:wb A sxb rbi PC rbi PCP

8|0xF2:A = rb plus ffzz C
8|0xE2:wb A plus ffzz C
12|0xE0:wb A plus ffzz rbi PC
12|0xF0:A = rb plus ffzz rbi PC
#LDDA,(HL)
8|0x3A:local temp = HL ; A = rb temp ; temp = temp-1 ; temp = limitS temp ; H = lb temp ; L = fb temp
8|0x32:local temp = HL ; wb A temp ; temp = temp-1 ; temp = limitS temp ; H = lb temp ; L = fb temp 
8|0x2A:local temp = HL ; A = rb temp ; temp = temp+1 ; temp = limitS temp ; H = lb temp ; L = fb temp
8|0x22:local temp = HL ; wb A temp ; temp = temp+1 ; temp = limitS temp ; H = lb temp ; L = fb temp 
#LD n,nn
12|0x01:C = rbi PC ; B = rbi PCP
12|0x11:E = rbi PC ; D = rbi PCP
12|0x21:L = rbi PC ; H = rbi PCP
12|0x31:SP = sxb rbi PC rbi PCP
8|0xF9:SP = HL
12|0xF8:local temp = rbsi PC ; setFHx PC temp ; setFCx PC temp ; setFNz ; setFZz ; temp = limitS temp ;temp = temp + PC ; H = lb temp ; L = fb temp
20|0x08:local temp = sxb rbi PC rbi PCP; wb lb SP temp; wb fb SP tempPo
#PUSH nn
16|0xF5:SP=SP-1 ; wb A SP ; SP=SP-1 ; wb F SP
16|0xC5:SP=SP-1 ; wb B SP ; SP=SP-1 ; wb C SP
16|0xD5:SP=SP-1 ; wb D SP ; SP=SP-1 ; wb E SP
16|0xE5:SP=SP-1 ; wb H SP ; SP=SP-1 ; wb L SP
#POP nn
12|0xF1:F = rb SP ; SP=SP+1 ; A = rb SP ; SP=SP+1
12|0xC1:C = rb SP ; SP=SP+1 ; B = rb SP ; SP=SP+1
12|0xD1:E = rb SP ; SP=SP+1 ; D = rb SP ; SP=SP+1
12|0xE1:L = rb SP ; SP=SP+1 ; H = rb SP ; SP=SP+1
#ADD A,n
4|0x87:local temp = A+A ; setFH A A ; setFZ temp ; setFC A A ; setFNz ; A = limit temp
4|0x80:local temp = A+B ; setFH A B ; setFZ temp ; setFC A B ; setFNz ; A = limit temp
4|0x81:local temp = A+C ; setFH A C ; setFZ temp ; setFC A C ; setFNz ; A = limit temp
4|0x82:local temp = A+D ; setFH A D ; setFZ temp ; setFC A D ; setFNz ; A = limit temp
4|0x83:local temp = A+E ; setFH A E ; setFZ temp ; setFC A E ; setFNz ; A = limit temp
4|0x84:local temp = A+H ; setFH A H ; setFZ temp ; setFC A H ; setFNz ; A = limit temp
4|0x85:local temp = A+L ; setFH A L ; setFZ temp ; setFC A L ; setFNz ; A = limit temp

8|0x86:local t = rb HL ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
8|0xC6:local t = rbi PC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp

#8|0x86:local temp = rb HL ; setFHx A temp ; setFZ A+temp ; setFCx A temp ; setFNz ; A = A+temp
#8|0xC6:local temp = rbi PC ; setFHx A temp ; setFZ A+temp ; setFCx A temp ; setFNz ; A = A+temp

#increment
4|0x3C:setFH A 1 ; A = A + 1 ; A = limit A ; setFZ A ; setFNz
4|0x04:setFH B 1 ; B = B + 1 ; B = limit B ; setFZ B ; setFNz
4|0x0C:setFH C 1 ; C = C + 1 ; C = limit C ; setFZ C ; setFNz
4|0x14:setFH D 1 ; D = D + 1 ; D = limit D ; setFZ D ; setFNz
4|0x1C:setFH E 1 ; E = E + 1 ; E = limit E ; setFZ E ; setFNz
4|0x24:setFH H 1 ; H = H + 1 ; H = limit H ; setFZ H ; setFNz
4|0x2C:setFH L 1 ; L = L + 1 ; L = limit L ; setFZ L ; setFNz
12|0x23:local temp = HL; temp = temp+1; temp = limitS temp ; H = lb temp ; L = fb temp ; setFZ temp ; setFNz
12|0x13:local temp = DE; temp = temp+1; temp = limitS temp ; D = lb temp ; E = fb temp ; setFZ temp ; setFNz
#todo: inc (HL)

#decrement
4|0x3D:setFHs A 1 ; A = sub A 1 ; A = limit A ; setFZ A ; setFN ; setFCz
4|0x05:setFHs B 1 ; B = sub B 1 ; B = limit B ; setFZ B ; setFN ; setFCz
4|0x0D:setFHs C 1 ; C = sub C 1 ; C = limit C ; setFZ C ; setFN ; setFCz
4|0x15:setFHs D 1 ; D = sub D 1 ; D = limit D ; setFZ D ; setFN ; setFCz
4|0x1D:setFHs E 1 ; E = sub E 1 ; E = limit E ; setFZ E ; setFN ; setFCz
4|0x25:setFHs H 1 ; H = sub H 1 ; H = limit H ; setFZ H ; setFN ; setFCz
4|0x2D:setFHs L 1 ; L = sub L 1 ; L = limit L ; setFZ L ; setFN ; setFCz
#todo dec HL

#ADC A,n add n + carry flag to A
4|0x8F:local t = A+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0x88:local t = B+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0x89:local t = C+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0x8A:local t = D+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0x8B:local t = E+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0x8C:local t = H+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0x8D:local t = L+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp

4|0x8E:local t = rb HL+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp
4|0xCE:local t = rbi PC+getFC ; local temp = A+t ; setFH A t ; setFZ temp ; setFC A t ; setFNz ; A = limit temp

#8|0x8E:local t = rb HL+getFC ; local temp = A+t ; setFHx A t ; setFZ temp ; setFCx A t ; setFNz ; A = temp
#8|0xCE:local t = rbi PC+getFC ; local temp = A+t ; setFHx A t ; setFZ temp ; setFCx A t ; setFNz ; A = temp

#SUB n
4|0x97:local temp = sub A A ; setFHs A A ; setFZ temp ; setFCs A A ; setFN ; A = temp
4|0x90:local temp = sub A B ; setFHs A B ; setFZ temp ; setFCs A B ; setFN ; A = temp
4|0x91:local temp = sub A C ; setFHs A C ; setFZ temp ; setFCs A C ; setFN ; A = temp
4|0x92:local temp = sub A D ; setFHs A D ; setFZ temp ; setFCs A D ; setFN ; A = temp
4|0x93:local temp = sub A E ; setFHs A E ; setFZ temp ; setFCs A E ; setFN ; A = temp
4|0x94:local temp = sub A H ; setFHs A H ; setFZ temp ; setFCs A H ; setFN ; A = temp
4|0x95:local temp = sub A L ; setFHs A L ; setFZ temp ; setFCs A L ; setFN ; A = temp

4|0xAF :A = xor A A ; setFZ A ; setFNz ; setFHz ; setFCz

#cp
4|0xBF:cpfunct A A
4|0xB8:cpfunct A B
4|0xB9:cpfunct A C
4|0xBA:cpfunct A D
4|0xBB:cpfunct A E
4|0xBC:cpfunct A H
4|0xBD:cpfunct A L
8|0xBE:local t = rb HL ; cpfunct A t
8|0xFE:local t = rbi PC ; cpfunct A t

#JR

8|0x20:ifnz PC = PC + rbsi PC  ; incCyc 4 end
8|0x28:ifz  PC = PC + rbsi PC  ; incCyc 4 end

8|0x18:PC = PC + rbsi PC


#call
12|0xCD:SP = SP-2 ; wbb PCpt SP ; PC = sxb rb PC rb PCP
#ret
8|0xC9:local temp = rb SP ; SP = SP + 1 ; temp = sxb temp rb SP ; SP = SP + 1 ; PC = temp

#rotate
8|0x17:local temp = getFC ; A = lsh A 1 ; setFCa band A 256 ; A = bor A temp ; A = limit A ; setFZ A ; setFHz ; setFNz



op cb.

#4|0x7c:if band H sf then Z=one else Z=zero end
8|0x7c:setFZ band H 128
8|0x11:local temp = getFC ; C = lsh C 1 ; setFCa band C 256 ; C = bor C temp ; C = limit C ; setFZ C ; setFHz ; setFNz